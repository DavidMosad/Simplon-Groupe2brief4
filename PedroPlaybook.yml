- name: Create Azure VM
  hosts: localhost
  connection: local
  tasks:
  - name: Create resource group
    azure_rm_resourcegroup:
      name: PedroTactile
      location: francecentral

  - name: Create virtual network
    azure.azcollection.azure_rm_virtualnetwork:
      resource_group: PedroTactile
      name: virtualPedroNetwork
      address_prefixes: "10.10.0.0/16"

  - name: Add subnet
    azure.azcollection.azure_rm_subnet:
      resource_group: PedroTactile
      name: subnetBastion
      address_prefix: "10.10.0.0/29"
      virtual_network: virtualPedroNetwork

  - name: Add subnet
    azure.azcollection.azure_rm_subnet:
      resource_group: PedroTactile
      name: subnetAppli
      address_prefix: "10.10.1.0/29"
      virtual_network: virtualPedroNetwork

  - name: Create public ip
    azure.azcollection.azure_rm_publicipaddress:
      resource_group: PedroTactile
      allocation_method: Static
      name: pedroIpBastion
    register: output_ip_address_bastion    
  - name: Public IP of VM
    debug:
      msg: "The public IP for the Bastion is {{ output_ip_address.state.ip_address }}."
  
  - name: Create public ip
    azure.azcollection.azure_rm_publicipaddress:
      resource_group: PedroTactile
      allocation_method: Static
      name: pedroIpAppli
    register: output_ip_address_Appli   
  - name: Public IP of VM
    debug:
      msg: "The public IP for the appli is {{ output_ip_address.state.ip_address }}."

  - name: Create MySQL Server
      azure_rm_mysqlserver:
        resource_group: "PedroTactile"
        name: "MyPedroSQLServ"
        sku:
          name: B_Gen5_1
          tier: Basic
        location: "ukwest"
        version: 5.6
        enforce_ssl: True
        admin_username: "{{ admin_username }}"
        admin_password: "{{ admin_password }}"
        storage_mb: 51200
  - name: Create instance of MySQL Database
      azure_rm_mysqldatabase:
        resource_group: "PedroTactile"
        server_name: "MyPedroSQLServ"
        name: "MyPedroSQLDDB"

  - name: Create Azure Cache for Redis
    azure_rm_rediscache:
      resource_group: "PedroTactile"
      name: "{{ redis_name }}"
      sku:
        name: basic
        size: C1

  - name: Wait for Redis provisioning to complete
    azure_rm_rediscache_info:
      resource_group: "PedroTactile"
      name: "{{ redis_name }}"
    register: facts
    until: "{{ facts.rediscaches[0]['provisioning_state'] == 'Succeeded' }}"
    retries: 100
    delay: 60
